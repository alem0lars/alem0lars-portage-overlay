--- doc/_ext/aafig.py	(original)
+++ doc/_ext/aafig.py	(refactored)
@@ -36,7 +36,7 @@
 
 
 def merge_dict(dst, src):
-    for (k, v) in src.items():
+    for (k, v) in list(src.items()):
         if k not in dst:
             dst[k] = v
     return dst
@@ -76,8 +76,8 @@
     def run(self):
         aafig_options = dict()
         image_attrs = dict()
-        own_options_keys = self.own_option_spec.keys() + ['scale']
-        for (k, v) in self.options.items():
+        own_options_keys = list(self.own_option_spec.keys()) + ['scale']
+        for (k, v) in list(self.options.items()):
             if k in own_options_keys:
                 # convert flags to booleans
                 if v is None:
@@ -125,7 +125,7 @@
             continue
         try:
             fname, outfn, id, extra = render_aafigure(app, text, options)
-        except AafigError, exc:
+        except AafigError as exc:
             app.builder.warn('aafigure error: ' + str(exc))
             img.replace_self(nodes.literal_block(text, text))
             continue
@@ -133,9 +133,9 @@
         # FIXME: find some way to avoid this hack in aafigure
         if extra:
             (width, height) = [x.split('"')[1] for x in extra.split()]
-            if not img.has_key('width'):
+            if 'width' not in img:
                 img['width'] = width
-            if not img.has_key('height'):
+            if 'height' not in img:
                 img['height'] = height
 
 
@@ -188,7 +188,7 @@
     try:
         (visitor, output) = aafigure.render(text, outfn, options)
 	output.close()
-    except aafigure.UnsupportedFormatError, e:
+    except aafigure.UnsupportedFormatError as e:
         raise AafigError(str(e))
 
     extra = None
